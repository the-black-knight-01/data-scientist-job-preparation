class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        for(int i = m, j = 0; j < n; j++){
            nums1[i] = nums2[j];
            i++;
        }
        Arrays.sort(nums1);
    }
}

class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
            int i = m-1, j = 0, k = m+n-1;
            while(j < n){
                        nums1[m+j] = nums2[j];
            }
            Arrays.sort(nums1);
    }
}

class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
            for(int j = m+n-1; j >= 0; j--){
                if ( m > 0 && n > 0){
                    if(nums1[m-1] > nums2[n-1]){
                        nums1[j] = nums1[m-1];
                        m--;
                    }else{
                        nums1[j] = nums2[n-1];
                        n--;
                    }
                } 
                if (m == 0 && n > 0){
                    for (int i = n; i > 0; i--){
                        nums1[i-1] = nums2[i-1];
                    }
                }
            }
    }
}

class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
            int i = m-1, j = n-1, k = m+n-1;
            while(j >= 0){
                    if(i >= 0 && nums1[i] > nums2[j]){
                        nums1[k--] = nums1[i--];
                    }else{
                        nums1[k--] = nums2[j--];
                    }
            }
    }
}

/***************************************** Approach 2 *****************************************/

class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int i = m-1;
        int j = n-1;
        int k = m+n-1;
        while(i>=0 && j>=0){
            if(nums1[i] > nums2[j]){
                nums1[k] = nums1[i];
                i--; k--;
            }
            else{
                nums1[k] = nums2[j];
                j--; k--;
            }
        }
        while(j>=0){
            nums1[k] = nums2[j];
            j--; k--;
        }
    }
};
